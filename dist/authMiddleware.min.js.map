{"version":3,"sources":["authMiddleware.js"],"names":["jwt","require","req","res","next","token","cookies","authMiddleware","json","message","verified","verify","process","env","JWT_SECRET","user","error","status","module","exports"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBAAdD,eAAc,SAAAE,EAAAC,EAApBC,GAGI,IAAMC,EAAQH,EAAII,QAAQD,MADxBE,IAAAA,EACIF,OAAQH,EAAII,OAAQD,KAA1BG,KAAA,CAAAC,QAAA,iCAEI,IAA8BA,IAAOC,EAAEV,IAAAW,OAAAN,EAAAO,QAAAC,IAAAC,YAAvCZ,EAAAa,KAAAL,EACHN,IAMC,MAAOY,GAJLb,EAAAc,OAAA,KAAAT,KAAA,CAAAC,QAAA,oBAIHS,OAACC,QAAAZ","file":"authMiddleware.min.js","sourcesContent":["const jwt = require('jsonwebtoken');\r\n\r\nconst authMiddleware = (req, res, next) => {\r\n    const token = req.cookies.token;\r\n    if (!token) {\r\n        return res.status(401).json({ message: 'Access denied, token missing' });\r\n    }\r\n\r\n    try {\r\n        const verified = jwt.verify(token, process.env.JWT_SECRET);\r\n        req.user = verified;\r\n        next();\r\n    } catch (error) {\r\n        res.status(400).json({ message: 'Invalid token' });\r\n    }\r\n};\r\n\r\nmodule.exports = authMiddleware;"]}