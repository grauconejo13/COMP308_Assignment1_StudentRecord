{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\n// Set the authorization token in the Axios headers\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Get the user role from the JWT token\nexport const getUserRole = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const decoded = jwt_decode(token);\n    return decoded.role; // Return the role from the token payload\n  }\n  return null;\n};","map":{"version":3,"names":["axios","jwt_decode","setAuthToken","token","defaults","headers","common","getUserRole","localStorage","getItem","decoded","role"],"sources":["C:/Users/vanes/Desktop/VanessaVictorino_COMP308-Assignment1/app/frontend/src/utils/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n// Set the authorization token in the Axios headers\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n// Get the user role from the JWT token\r\nexport const getUserRole = () => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    const decoded = jwt_decode(token);\r\n    return decoded.role;  // Return the role from the token payload\r\n  }\r\n  return null;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;;AAEnC;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTH,KAAK,CAACI,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACpE,CAAC,MAAM;IACL,OAAOH,KAAK,CAACI,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMJ,KAAK,GAAGK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIN,KAAK,EAAE;IACT,MAAMO,OAAO,GAAGT,UAAU,CAACE,KAAK,CAAC;IACjC,OAAOO,OAAO,CAACC,IAAI,CAAC,CAAE;EACxB;EACA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}