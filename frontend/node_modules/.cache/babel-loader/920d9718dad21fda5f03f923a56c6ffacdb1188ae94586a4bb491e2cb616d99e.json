{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanes\\\\Desktop\\\\VanessaVictorino_COMP308-Assignment1\\\\app\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Import Link\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // Clear local storage before registration to prevent large headers\n    localStorage.clear();\n\n    // First validate if passwords match\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n\n    // Handle registration logic here\n    try {\n      // Log the data being sent to the backend\n      console.log(\"Sending registration data:\", {\n        username,\n        email,\n        password\n      });\n\n      // Axios request to register the user\n      const response = await axios.post('/api/auth/register', {\n        username,\n        email,\n        password,\n        userType: 'student' // Assuming default userType is student\n      });\n\n      // Check if the token exists before using it\n      const token = response.data.token;\n      if (!token) {\n        throw new Error('No token received from the server.');\n      }\n\n      // Save the JWT token in localStorage\n      localStorage.setItem('token', token);\n\n      // Optionally decode the token (for user role or data)\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      console.log(\"Decoded Token:\", decodedToken);\n\n      // Redirect based on userType\n      if (decodedToken.user.userType === 'student') {\n        history.push('/student-dashboard');\n      } else if (decodedToken.user.userType === 'admin') {\n        history.push('/admin-dashboard');\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error); // Log the actual error\n      if (error.response && error.response.data) {\n        setErrorMessage(error.response.data.msg || 'Registration failed, please try again.');\n      } else {\n        setErrorMessage('Registration failed, please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"Jz7P8BR6BT7gVjLSpa6JJCq2QdQ=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useHistory","axios","Link","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","history","handleRegister","e","preventDefault","localStorage","clear","console","log","response","post","userType","token","data","Error","setItem","decodedToken","JSON","parse","atob","split","user","push","error","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","style","color","to","_c","$RefreshReg$"],"sources":["C:/Users/vanes/Desktop/VanessaVictorino_COMP308-Assignment1/app/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';  // Import Link\r\nimport './RegisterPage.css';  \r\n\r\nconst RegisterPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n     // Clear local storage before registration to prevent large headers\r\n    localStorage.clear();\r\n\r\n    // First validate if passwords match\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // Handle registration logic here\r\n    try {\r\n      // Log the data being sent to the backend\r\n      console.log(\"Sending registration data:\", { username, email, password });\r\n\r\n      // Axios request to register the user\r\n      const response = await axios.post('/api/auth/register', {\r\n        username,\r\n        email,\r\n        password,\r\n        userType: 'student',  // Assuming default userType is student\r\n      });\r\n\r\n      // Check if the token exists before using it\r\n      const token = response.data.token;\r\n      if (!token) {\r\n        throw new Error('No token received from the server.');\r\n      }\r\n\r\n      // Save the JWT token in localStorage\r\n      localStorage.setItem('token', token);\r\n\r\n      // Optionally decode the token (for user role or data)\r\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n      console.log(\"Decoded Token:\", decodedToken);\r\n\r\n      // Redirect based on userType\r\n      if (decodedToken.user.userType === 'student') {\r\n        history.push('/student-dashboard');\r\n      } else if (decodedToken.user.userType === 'admin') {\r\n        history.push('/admin-dashboard');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error);  // Log the actual error\r\n      if (error.response && error.response.data) {\r\n        setErrorMessage(error.response.data.msg || 'Registration failed, please try again.');\r\n      } else {\r\n        setErrorMessage('Registration failed, please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"form-container\">\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleRegister}>\r\n          <div>\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Confirm Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n\r\n        {/* Add a link to the login page */}\r\n        <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}