{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanes\\\\Desktop\\\\VanessaVictorino_COMP308-Assignment1\\\\app\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Import Link\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // Clear cookies before registration to avoid oversized headers\n    document.cookie.split(\";\").forEach(c => {\n      document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n    });\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n\n    // Create FormData instance\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('email', email);\n    formData.append('password', password);\n    formData.append('userType', 'student'); // Assuming default userType is student\n\n    try {\n      // Axios request to register the user\n      const response = await axios.post('/api/auth/register', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Important for multipart requests\n        },\n        withCredentials: false // Disable cookies to avoid oversized headers\n      });\n      const token = response.data.token;\n      if (!token) {\n        throw new Error('No token received from the server.');\n      }\n      localStorage.setItem('token', token);\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\n      if (decodedToken.user.userType === 'student') {\n        history.push('/student-dashboard');\n      } else if (decodedToken.user.userType === 'admin') {\n        history.push('/admin-dashboard');\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error);\n      setErrorMessage('Registration failed, please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"Jz7P8BR6BT7gVjLSpa6JJCq2QdQ=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useHistory","axios","Link","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","history","handleRegister","e","preventDefault","document","cookie","split","forEach","c","replace","Date","toUTCString","formData","FormData","append","response","post","headers","withCredentials","token","data","Error","localStorage","setItem","decodedToken","JSON","parse","atob","user","userType","push","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","to","_c","$RefreshReg$"],"sources":["C:/Users/vanes/Desktop/VanessaVictorino_COMP308-Assignment1/app/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';  // Import Link\r\nimport './RegisterPage.css';  \r\n\r\nconst RegisterPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n      // Clear cookies before registration to avoid oversized headers\r\n    document.cookie.split(\";\").forEach((c) => { \r\n      document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\r\n    });\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // Create FormData instance\r\n    const formData = new FormData();\r\n    formData.append('username', username);\r\n    formData.append('email', email);\r\n    formData.append('password', password);\r\n    formData.append('userType', 'student');  // Assuming default userType is student\r\n\r\n    try {\r\n      // Axios request to register the user\r\n      const response = await axios.post('/api/auth/register', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',  // Important for multipart requests\r\n        },\r\n         withCredentials: false,  // Disable cookies to avoid oversized headers\r\n      });\r\n\r\n      const token = response.data.token;\r\n      if (!token) {\r\n        throw new Error('No token received from the server.');\r\n      }\r\n\r\n      localStorage.setItem('token', token);\r\n      const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n\r\n      if (decodedToken.user.userType === 'student') {\r\n        history.push('/student-dashboard');\r\n      } else if (decodedToken.user.userType === 'admin') {\r\n        history.push('/admin-dashboard');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error);\r\n      setErrorMessage('Registration failed, please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"form-container\">\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleRegister}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n         {/* Add a link to the login page */}\r\n      <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}