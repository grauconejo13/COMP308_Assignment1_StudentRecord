{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanes\\\\Desktop\\\\VanessaVictorino_COMP308-Assignment1\\\\app\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Import Link\nimport './RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // Handle registration logic here\n    try {\n      // Log the data being sent to the backend\n      console.log(\"Sending registration data:\", {\n        username,\n        email,\n        password\n      });\n\n      // Simplified Axios request with minimal headers\n      const response = await axios.post('/api/auth/register', {\n        username,\n        email,\n        password,\n        userType: 'student'\n      });\n      /*{\r\n       headers: {\r\n         'Content-Type': 'application/json',  // Only send necessary headers\r\n       },\r\n       withCredentials: false,  // Make sure you're not sending cookies\r\n      });*/\n\n      // Check if the token exists before using it\n      const token = response.data.token;\n      if (!token) {\n        throw new Error('No token received from the server.');\n      }\n\n      // Save the JWT token in localStorage\n      localStorage.setItem('token', response.data.token);\n\n      // Optionally decode the token (for user role or data)\n      const decodedToken = JSON.parse(atob(response.data.token.split('.')[1]));\n      if (decodedToken.user.userType === 'student') {\n        history.push('/student-dashboard');\n      } else if (decodedToken.user.userType === 'admin') {\n        history.push('/admin-dashboard');\n      }\n      if (password !== confirmPassword) {\n        setErrorMessage('Passwords do not match');\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error); // Log the actual error\n      setErrorMessage('Registration failed, please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"Jz7P8BR6BT7gVjLSpa6JJCq2QdQ=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useHistory","axios","Link","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","history","handleRegister","e","preventDefault","console","log","response","post","userType","token","data","Error","localStorage","setItem","decodedToken","JSON","parse","atob","split","user","push","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","style","color","to","_c","$RefreshReg$"],"sources":["C:/Users/vanes/Desktop/VanessaVictorino_COMP308-Assignment1/app/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';  // Import Link\r\nimport './RegisterPage.css';  \r\n\r\nconst RegisterPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleRegister = async(e) => {\r\n    e.preventDefault();\r\n\r\n    // Handle registration logic here\r\n  try {\r\n       // Log the data being sent to the backend\r\n      console.log(\"Sending registration data:\", { username, email, password });\r\n\r\n      // Simplified Axios request with minimal headers\r\n    const response = await axios.post('/api/auth/register', {\r\n      username,\r\n      email,\r\n      password,\r\n      userType: 'student'\r\n    });\r\n     /*{\r\n      headers: {\r\n        'Content-Type': 'application/json',  // Only send necessary headers\r\n      },\r\n      withCredentials: false,  // Make sure you're not sending cookies\r\n    });*/\r\n\r\n      // Check if the token exists before using it\r\n    const token = response.data.token;\r\n       if (!token) {\r\n      throw new Error('No token received from the server.');\r\n    }\r\n\r\n      // Save the JWT token in localStorage\r\n      localStorage.setItem('token', response.data.token);\r\n\r\n        // Optionally decode the token (for user role or data)\r\n      const decodedToken = JSON.parse(atob(response.data.token.split('.')[1]));\r\n      \r\n      if (decodedToken.user.userType === 'student') {\r\n        history.push('/student-dashboard');\r\n      } else if (decodedToken.user.userType === 'admin') {\r\n        history.push('/admin-dashboard');\r\n      }\r\n\r\n      if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n  } catch (error) {\r\n        console.error(\"Error during registration:\", error);  // Log the actual error\r\n        setErrorMessage('Registration failed, please try again.');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n    <div className=\"form-container\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <div>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n\r\n      {/* Add a link to the login page */}\r\n      <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}