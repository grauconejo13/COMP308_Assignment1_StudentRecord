{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanes\\\\Desktop\\\\VanessaVictorino_COMP308-Assignment1\\\\app\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Using axios for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [courses, setCourses] = useState([]); // Initializing courses as an empty array\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get('/api/courses');\n        console.log(response); // Log to inspect the response structure\n\n        // Make sure to access the courses array properly based on API response structure\n        if (response.data && Array.isArray(response.data)) {\n          setCourses(response.data); // Assuming response.data is an array\n        } else if (response.data && response.data.courses) {\n          setCourses(response.data.courses); // If courses are inside a 'courses' object\n        } else {\n          console.error(\"Unexpected response structure\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching courses:\", error);\n      }\n    };\n    fetchCourses();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(courses) && courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: course.courseName\n      }, course._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No courses available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","courses","setCourses","fetchCourses","response","get","console","log","data","Array","isArray","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","course","courseName","_id","_c","$RefreshReg$"],"sources":["C:/Users/vanes/Desktop/VanessaVictorino_COMP308-Assignment1/app/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';  // Using axios for API requests\r\n\r\nconst StudentDashboard = () => {\r\n  const [courses, setCourses] = useState([]);  // Initializing courses as an empty array\r\n\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await axios.get('/api/courses');\r\n        console.log(response); // Log to inspect the response structure\r\n\r\n        // Make sure to access the courses array properly based on API response structure\r\n        if (response.data && Array.isArray(response.data)) {\r\n          setCourses(response.data);  // Assuming response.data is an array\r\n        } else if (response.data && response.data.courses) {\r\n          setCourses(response.data.courses);  // If courses are inside a 'courses' object\r\n        } else {\r\n          console.error(\"Unexpected response structure\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching courses:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCourses();\r\n  }, []);  // Empty dependency array ensures this effect runs only once\r\n\r\n  return (\r\n    <div>\r\n      <h1>Student Dashboard</h1>\r\n      <ul>\r\n        {/* Check if courses is an array before using map */}\r\n        {Array.isArray(courses) && courses.length > 0 ? (\r\n          courses.map((course) => (\r\n            <li key={course._id}>{course.courseName}</li>\r\n          ))\r\n        ) : (\r\n          <p>No courses available</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,cAAc,CAAC;QAChDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC;;QAEvB;QACA,IAAIA,QAAQ,CAACI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAAC,EAAE;UACjDN,UAAU,CAACE,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;QAC9B,CAAC,MAAM,IAAIJ,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACP,OAAO,EAAE;UACjDC,UAAU,CAACE,QAAQ,CAACI,IAAI,CAACP,OAAO,CAAC,CAAC,CAAE;QACtC,CAAC,MAAM;UACLK,OAAO,CAACK,KAAK,CAAC,+BAA+B,CAAC;QAChD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDR,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAAc,QAAA,EAEGH,KAAK,CAACC,OAAO,CAACT,OAAO,CAAC,IAAIA,OAAO,CAACgB,MAAM,GAAG,CAAC,GAC3ChB,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBACjBrB,OAAA;QAAAc,QAAA,EAAsBO,MAAM,CAACC;MAAU,GAA9BD,MAAM,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAC7C,CAAC,gBAEFlB,OAAA;QAAAc,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAxCID,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}